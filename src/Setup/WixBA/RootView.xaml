<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the Microsoft Reciprocal License. See LICENSE.TXT file in the project root for full license information. -->


<Window x:Class="WixToolset.UX.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ux="clr-namespace:WixToolset.UX"
        WindowStartupLocation="CenterScreen"
        WindowStyle="ThreeDBorderWindow"
        AllowsTransparency="False"
        ResizeMode="CanResizeWithGrip"
        
        Background="{x:Null}"
        SizeToContent="WidthAndHeight"
        MinHeight="400"
        MinWidth="550"
        MaxHeight="600"
        MaxWidth="800"
    >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WixBA;component/Theme.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WixBA;component/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
  
    <i:Interaction.Behaviors>
        <ux:WinNoSnapBehavior />
    </i:Interaction.Behaviors>

    <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="0" >
    <!-- Define background and catch MouseLeftButtonDown for Window dragging.-->
    <Border MouseLeftButtonDown="Background_MouseLeftButtonDown" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
        <Border.Style>
            <Style>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True">
                        <Setter Property="Border.Background" Value="{DynamicResource HighContrastBackgroundBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="False">
                        <Setter Property="Border.Background" Value="{DynamicResource ThemedBackgroundBrush}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
            <!-- If click on no-input control (i.e. TextBlock, ProgressBar) catch click here to avoid InvalidOperationException.-->
            <DockPanel x:Name="AppArtBoardArea" MouseLeftButtonDown="Background_MouseLeftButtonDown" VerticalAlignment="Stretch" MouseDown="RootView_IgnoreClick" MouseUp="RootView_IgnoreClick" >
                
                <DockPanel x:Name="ActionArea" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom" Margin="0,0,10,10">
                    <DockPanel x:Name="FinalActionArea" DockPanel.Dock="Right" Margin="5,0,0,0">
                        <StackPanel x:Name="FooterCancelBtnDcIsland" DataContext="{Binding}" Style="{DynamicResource ActionBtnStkPnlStyle}">
                            <Button Visibility="{Binding CancelEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding CancelCommand}" AutomationProperties.Name="Cancel Button" AutomationProperties.HelpText="Press to Cancel" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Cancel" Style="{DynamicResource ActionButtonStyle}" />
                        </StackPanel>

                        <StackPanel x:Name="FooterCloseBtnDcIsland" HorizontalAlignment="Center" DataContext="{Binding InstallationViewModel}"  Style="{DynamicResource ActionBtnStkPnlStyle}">
                            <Button x:Name="FooterExitButton" Visibility="{Binding ExitEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding CloseCommand}" AutomationProperties.Name="Exit Button" AutomationProperties.HelpText="Click to Close" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Close" Style="{DynamicResource ActionButtonStyle}"/>
                        </StackPanel>

                    </DockPanel>

                    <DockPanel x:Name="InitiateActionArea" DockPanel.Dock="Right">
                        <!-- Displayed from left to right, when ordered from top to bottom.  Most preferred is at the top.-->
                        <StackPanel x:Name="UpdateBtnDcIsland" DataContext="{Binding UpdateViewModel}"  Style="{DynamicResource ActionBtnStkPnlStyle}">
                            <!-- {Binding UpdateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}-->
                            <Button Command="{Binding UpdateCommand}" AutomationProperties.Name="Update Button" AutomationProperties.HelpText="An update is availalbe. Click to get the update" Visibility="{Binding UpdateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Update" Style="{DynamicResource ActionButtonStyle}" />
                        </StackPanel>
                        <StackPanel x:Name="InstallBtnDcIsland" DataContext="{Binding InstallationViewModel}" Style="{DynamicResource ActionBtnStkPnlStyle}">
                            <!-- {Binding InstallEnabled, Converter={StaticResource BooleanToVisibilityConverter}}-->
                            <Button Visibility="{Binding InstallEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding InstallCommand}" AutomationProperties.Name="Install Button" AutomationProperties.HelpText="Click to accept license and install" Content="_Install" Style="{DynamicResource ActionButtonStyle}" IsDefault="True" />
                        </StackPanel>
                        <StackPanel x:Name="RepairBtnDcIsland" DataContext="{Binding InstallationViewModel}"  Style="{DynamicResource ActionBtnStkPnlStyle}">
                            <!--{Binding RepairEnabled, Converter={StaticResource BooleanToVisibilityConverter}} -->
                            <Button x:Name="RepairButton" Visibility="{Binding RepairEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding RepairCommand}" AutomationProperties.Name="Repair Button" AutomationProperties.HelpText="Click to Repair" Content="Repair" Style="{DynamicResource ActionButtonStyle}"/>
                        </StackPanel>
                        <StackPanel x:Name="UninstallBtnDcIsland" DataContext="{Binding InstallationViewModel}"  Style="{DynamicResource ActionBtnStkPnlStyle}">
                            <!-- {Binding UninstallEnabled, Converter={StaticResource BooleanToVisibilityConverter}}-->
                            <Button Visibility="{Binding UninstallEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding UninstallCommand}" AutomationProperties.Name="Uninstall Button" AutomationProperties.HelpText="Click to Uninstall" Content="Uninstall" Style="{DynamicResource ActionButtonStyle}"/>
                        </StackPanel>
                        <StackPanel x:Name="TryAgainBtnDcIsland" DataContext="{Binding InstallationViewModel}"  Style="{DynamicResource ActionBtnStkPnlStyle}">
                            <!-- {Binding TryAgainEnabled, Converter={StaticResource BooleanToVisibilityConverter}}-->
                            <Button Command="{Binding TryAgainCommand}" AutomationProperties.Name="Try Again Button" AutomationProperties.HelpText="Click to try again" Visibility="{Binding TryAgainEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Try Again?" Style="{DynamicResource ActionButtonStyle}" />
                        </StackPanel>
                    </DockPanel>

                    <DockPanel x:Name="LeftMarqueeDcIsland" DockPanel.Dock="Right" HorizontalAlignment="Left" DataContext="{Binding UpdateViewModel}" >
                        <!-- {Binding CheckingEnabled}  {Binding CheckingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}-->
                        <StackPanel x:Name="CheckingUpdatesProgressDcIsland"  HorizontalAlignment="Stretch" VerticalAlignment="Center" MinWidth="150">
                            <ProgressBar x:Name="CheckingUpdatesProgress" Visibility="{Binding CheckingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" IsIndeterminate="{Binding CheckingEnabled}" Margin="20,0" MinHeight="10" HorizontalContentAlignment="Stretch" />
                        </StackPanel>
                    </DockPanel>
                </DockPanel>

                <StackPanel x:Name="FinalStatusArea" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
                    <StackPanel x:Name="CompleteDcIsland" Margin="20,15,20,0" Orientation="Horizontal" Visibility="{Binding CompleteEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding InstallationViewModel}">
                        <ContentPresenter x:Name="CommpletePresenter" Content="Complete" TextBlock.FontWeight="Bold" Margin="20,0"/>
                        <Button x:Name="CompleteViewLogDcIsland" Command="{Binding OpenLogCommand}" Style="{StaticResource HyperlinkedButtonStyle}" >
                            <TextBlock ><Hyperlink Command="{Binding OpenLogCommand}" IsEnabled="True" ><Run Text="View Log" FontSize="{DynamicResource FontSizeButton}" /></Hyperlink></TextBlock>
                        </Button>
                        <Button x:Name="CompleteViewLogFolderDcIsland" Command="{Binding OpenLogFolderCommand}" Style="{StaticResource HyperlinkedButtonStyle}" Margin="10,0">
                            <TextBlock ><Hyperlink Command="{Binding OpenLogFolderCommand}" IsEnabled="True" ><Run Text="View Log Folder" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                        </Button>
                    </StackPanel>
                    <StackPanel x:Name="FailedStatusDcIsland" Margin="20,15,20,0" Orientation="Horizontal" Visibility="{Binding TryAgainEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding InstallationViewModel}">
                        <ContentPresenter x:Name="FailedPresenter"  Content="Failed" TextBlock.FontWeight="Bold" Margin="20,0"/>
                        <Button x:Name="FailedViewLogDcIsland" Command="{Binding OpenLogCommand}" Style="{StaticResource HyperlinkedButtonStyle}" >
                            <TextBlock ><Hyperlink Command="{Binding OpenLogCommand}" IsEnabled="True" ><Run Text="View Log" FontSize="{DynamicResource FontSizeButton}" /></Hyperlink></TextBlock>
                        </Button>
                        <Button x:Name="FailedViewLogFolderDcIsland" Command="{Binding OpenLogFolderCommand}" Style="{StaticResource HyperlinkedButtonStyle}" Margin="10,0">
                            <TextBlock ><Hyperlink Command="{Binding OpenLogFolderCommand}" IsEnabled="True" ><Run Text="View Log Folder" FontSize="{DynamicResource FontSizeButton}" /></Hyperlink></TextBlock>
                        </Button>
                    </StackPanel>
                </StackPanel>

                <StackPanel x:Name="StatusStkPnlDcIsland" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom" DataContext="{Binding ProgressViewModel}">

                    <StackPanel x:Name="ActionTextStkPnl" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="20,5,20,0" >
                        <TextBlock Style="{StaticResource StatusTextStyle}"  Visibility="{Binding ProgressEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding Message}" MaxWidth="300" MinHeight="20" TextWrapping="WrapWithOverflow"/>
                    </StackPanel>

                    <StackPanel x:Name="ActionProgressStkPnl" HorizontalAlignment="Stretch" Margin="20,5,20,15">
                        <ProgressBar x:Name="ActionProgress"  Value="{Binding Progress}" VerticalAlignment="Center" Height="10" Visibility="{Binding ProgressEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"  MinWidth="380"/>
                    </StackPanel>
                </StackPanel>
                
                <StackPanel x:Name="TitleStkPnl" HorizontalAlignment="Stretch" DockPanel.Dock="Top" DataContext="{Binding}">
                    <ContentPresenter x:Name="TitlePresenter" Style="{DynamicResource TitleContPresStyle}" Content="{Binding Title, Mode=OneTime}" >
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </StackPanel>

                <StackPanel x:Name="SkuStkPnl" Margin="20,0,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Top" DockPanel.Dock="Left">

                    <Grid x:Name="SkuInfo" DataContext="{Binding InstallationViewModel}" HorizontalAlignment="Left">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" MinHeight="20"/>
                            <RowDefinition Height="auto" MinHeight="20"/>
                            <RowDefinition Height="auto" MinHeight="20"/>
                            <RowDefinition Height="auto" MinHeight="20"/>
                            <RowDefinition Height="auto" MinHeight="20"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" MinWidth="10" />
                            <ColumnDefinition Width="*" MinWidth="10" />
                        </Grid.ColumnDefinitions>

                        <ContentPresenter x:Name="SkuPublisherLabel" Margin="0,2,3,0" Grid.Row="0" Grid.Column="0" Content="Publisher:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                        <ContentPresenter Content="{Binding Publisher, Mode=OneTime}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeMedium}" TextBlock.FontWeight="Light" />

                        <ContentPresenter x:Name="SkuVersionLabel" Margin="0,2,3,0" Grid.Row="1" Grid.Column="0" Content="Version:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                        <ContentPresenter Content="{Binding Version}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeMedium}" TextBlock.FontWeight="Light" />

                        <ContentPresenter x:Name="SkuLicenseLabel" Margin="0,2,3,0" Grid.Row="2" Grid.Column="0" Content="License:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                        <Button x:Name="SkuLicenseBtn" Margin="0,2,3,0" Grid.Row="2" Grid.Column="1" Command="{Binding LicenseCommand}"  AutomationProperties.Name="License Button" AutomationProperties.HelpText="View the license" Style="{StaticResource HyperlinkedButtonStyle}" HorizontalAlignment="Left" >
                            <TextBlock HorizontalAlignment="Left" ><Hyperlink Command="{Binding LicenseCommand}" IsEnabled="True" ><Run Text="View License" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                        </Button>
                        <ContentPresenter x:Name="SkuNewsLabel" Margin="0,2,3,0" Grid.Row="3" Grid.Column="0" Content="News:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                        <Button x:Name="SkuNewsBtn" Margin="0,2,3,0" Grid.Row="3" Grid.Column="1" Command="{Binding LaunchNewsCommand}"  AutomationProperties.Name="News Button" AutomationProperties.HelpText="Latest News" Style="{StaticResource HyperlinkedButtonStyle}" HorizontalAlignment="Left" >
                            <TextBlock HorizontalAlignment="Left" ><Hyperlink Command="{Binding LaunchNewsCommand}" IsEnabled="True" ><Run Text="Latest News" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                        </Button>
                        <ContentPresenter x:Name="SkuSupportLabel" Margin="0,2,3,0" Grid.Row="4" Grid.Column="0" Content="Support:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                        <Button x:Name="SkuSupportBtn" Margin="0,2,3,0" Grid.Row="4" Grid.Column="1" Command="{Binding LaunchHomePageCommand}"  AutomationProperties.Name="Home Page Button" AutomationProperties.HelpText="View Home Page for Support"  Style="{StaticResource HyperlinkedButtonStyle}" HorizontalAlignment="Left" >
                            <TextBlock HorizontalAlignment="Left" ><Hyperlink Command="{Binding LaunchHomePageCommand}" IsEnabled="True" ><Run Text="{Binding SupportUrl, Mode=OneTime}" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                        </Button>


                    </Grid>
                </StackPanel>

                <DockPanel x:Name="UpdateChangesStkPnl" DockPanel.Dock="Left" HorizontalAlignment="Stretch" >

                    <DockPanel x:Name="AboveUpdateChanges" DockPanel.Dock="Top"  >
                        <StackPanel x:Name="BrandStkPnl" Style="{DynamicResource BrandStkPnlStyle}" DockPanel.Dock="Right" DataContext="{Binding InstallationViewModel}"  >
                            <Image x:Name="OrgLogo" Style="{DynamicResource LogoStyle}" />
                        </StackPanel>

                        <StackPanel x:Name="UpdateInfoStkPnlDcIsland" Margin="10,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Stretch" DockPanel.Dock="Left" DataContext="{Binding UpdateViewModel}" >

                            <Grid x:Name="UpdateInfo" HorizontalAlignment="Left" Visibility="{Binding UpdateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"   >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" MinHeight="20"/>
                                    <RowDefinition Height="auto" MinHeight="20"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" MinWidth="10" />
                                    <ColumnDefinition Width="*" MinWidth="10" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Margin="0,2,3,0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" >
                                    <ContentPresenter x:Name="UpdateTitleLabel"  Content="Available Update:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold"  />
                                </StackPanel>

                                <ContentPresenter x:Name="UpdateVersionLabel" Margin="0,2,10,0" Grid.Row="1" Grid.Column="0" Content="Version:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                                <ContentPresenter Content="{Binding UpdateVersion}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeMedium}" TextBlock.FontWeight="Light"  />

                            </Grid>
                        </StackPanel>
                    </DockPanel>

                    <StackPanel x:Name="ChangesStkPnlDcIsland" DockPanel.Dock="Top" DataContext="{Binding UpdateViewModel}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                        <WebBrowser ux:NavToStringBehavior.HtmlDoc="{Binding UpdateChanges}" HorizontalAlignment="Left" VerticalAlignment="Top" MinHeight="200" MinWidth="300" MaxHeight="200" MaxWidth="700" Margin="0,0,5,10" Visibility="{Binding UpdateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"  />
                    </StackPanel>
                </DockPanel>

            </DockPanel>
        </Border>
    </Border>
</Window>
