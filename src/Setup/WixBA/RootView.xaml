<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the Microsoft Reciprocal License. See LICENSE.TXT file in the project root for full license information. -->


<Window x:Class="WixToolset.UX.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ux="clr-namespace:WixToolset.UX"
        WindowStartupLocation="CenterScreen"
        WindowStyle="ThreeDBorderWindow"
        AllowsTransparency="False"
        ResizeMode="CanMinimize"
        
        Background="{x:Null}"
        SizeToContent="WidthAndHeight"
        MinWidth="520"
        MinHeight="325"
    >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WixBA;component/Theme.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WixBA;component/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
  
    <i:Interaction.Behaviors>
        <ux:WinNoSnapBehavior/>
    </i:Interaction.Behaviors>

    <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="0" >
    <!-- Define background and catch MouseLeftButtonDown for Window dragging.-->
    <Border MouseLeftButtonDown="Background_MouseLeftButtonDown" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
        <Border.Style>
            <Style>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True">
                        <Setter Property="Border.Background" Value="{DynamicResource HighContrastBackgroundBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="False">
                        <Setter Property="Border.Background" Value="{DynamicResource ThemedBackgroundBrush}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
            <!-- If click on no-input control (i.e. TextBlock, ProgressBar) catch click here to avoid InvalidOperationException.-->
            <DockPanel x:Name="AppArtBoardArea" MouseLeftButtonDown="Background_MouseLeftButtonDown" VerticalAlignment="Stretch" MouseDown="RootView_IgnoreClick" MouseUp="RootView_IgnoreClick" >

                <StackPanel x:Name="StatusAndActionArea" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
                    <StackPanel x:Name="ActionProgressDcIsland" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="20,15,20,0" >
                        <ProgressBar x:Name="ActionProgress" DataContext="{Binding ProgressViewModel}" Value="{Binding Progress}" VerticalAlignment="Center" Height="20" Visibility="{Binding ProgressEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"  MinWidth="380"/>
                    </StackPanel>
                    <StackPanel x:Name="ActionTextDcIsland" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="20,15,20,0">
                        <TextBlock Style="{StaticResource StatusTextStyle}" DataContext="{Binding ProgressViewModel}" Visibility="{Binding ProgressEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding Message}" MaxWidth="{Binding ActionTextMaxWidth}" />
                    </StackPanel>

                    <StackPanel x:Name="UpdateCheckingDcIsland" Margin="20,15,20,0" Visibility="{Binding CheckingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding UpdateViewModel}" >
                        <ContentPresenter x:Name="CheckingPresenter"  Content="Checking for updates..." />
                    </StackPanel>
                    <StackPanel x:Name="CheckingUpdatesProgressDcIsland"  HorizontalAlignment="Stretch" Margin="20,15,20,0" >
                        <ProgressBar x:Name="CheckingUpdatesProgress" DataContext="{Binding UpdateViewModel}" Visibility="{Binding CheckingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" IsIndeterminate="{Binding CheckingEnabled}" Style="{DynamicResource CheckingStatusProgressBarStyle}"/>
                    </StackPanel>

                    <StackPanel x:Name="CompleteDcIsland" Margin="20,15,20,0" Orientation="Horizontal" Visibility="{Binding CompleteEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding InstallationViewModel}">
                        <ContentPresenter x:Name="CommpletePresenter" Content="Complete" TextBlock.FontWeight="Bold" Margin="20,0"/>
                        <Button x:Name="CompleteViewLogDcIsland" Command="{Binding OpenLogCommand}" Style="{StaticResource InfoButtonStyle}" >
                            <TextBlock ><Hyperlink Command="{Binding OpenLogCommand}" IsEnabled="True" ><Run Text="View Log" FontSize="{DynamicResource FontSizeButton}" /></Hyperlink></TextBlock>
                        </Button>
                        <Button x:Name="CompleteViewLogFolderDcIsland" Command="{Binding OpenLogFolderCommand}" Style="{StaticResource InfoButtonStyle}" Margin="10,0">
                            <TextBlock ><Hyperlink Command="{Binding OpenLogFolderCommand}" IsEnabled="True" ><Run Text="View Log Folder" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                        </Button>
                    </StackPanel>
                    <StackPanel x:Name="FailedStatusDcIsland" Margin="20,15,20,0" Orientation="Horizontal" Visibility="{Binding TryAgainEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding InstallationViewModel}">
                        <ContentPresenter x:Name="FailedPresenter"  Content="Failed" TextBlock.FontWeight="Bold" Margin="20,0"/>
                        <Button x:Name="FailedViewLogDcIsland" Command="{Binding OpenLogCommand}" Style="{StaticResource InfoButtonStyle}" >
                            <TextBlock ><Hyperlink Command="{Binding OpenLogCommand}" IsEnabled="True" ><Run Text="View Log" FontSize="{DynamicResource FontSizeButton}" /></Hyperlink></TextBlock>
                        </Button>
                        <Button x:Name="FailedViewLogFolderDcIsland" Command="{Binding OpenLogFolderCommand}" Style="{StaticResource InfoButtonStyle}" Margin="10,0">
                            <TextBlock ><Hyperlink Command="{Binding OpenLogFolderCommand}" IsEnabled="True" ><Run Text="View Log Folder" FontSize="{DynamicResource FontSizeButton}" /></Hyperlink></TextBlock>
                        </Button>
                    </StackPanel>

                    <Grid x:Name="ActionGrid" HorizontalAlignment="Stretch" Margin="15,10" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" MinHeight="10" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" MinWidth="100" />
                            <ColumnDefinition Width="auto" MinWidth="5" />
                            <ColumnDefinition Width="auto" MinWidth="5" />
                            <ColumnDefinition Width="auto" MinWidth="5" />
                        </Grid.ColumnDefinitions>
                        <StackPanel x:Name="IsUpdateToDateDcIsland" Grid.Row="0" Grid.Column="0" Margin="20,15,20,0" Visibility="{Binding IsUpToDate, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding UpdateViewModel}" >
                            <ContentPresenter x:Name="UpdateAvailablePresenter"  Content="Update to date." />
                        </StackPanel>

                        <StackPanel x:Name="ActionStkPnl" Grid.Row="0" Grid.Column="3" Orientation="Horizontal" >
                            <!-- wix-devs: Do we need this Cancel button - or should we just have the X in the Chrome? -->
                            <StackPanel x:Name="FooterCancelBtnDcIsland" HorizontalAlignment="Center" DataContext="{Binding}">
                                <Button Visibility="{Binding CancelEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding CancelCommand}" AutomationProperties.Name="Cancel Button" AutomationProperties.HelpText="Press to Cancel" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Cancel" Style="{DynamicResource ActionButtonStyle}" />
                            </StackPanel>
                            <!-- wix-devs: Do we want an Exit button? - or just have the X in the Chrome? or only sometimes like when 'complete', but not failed or not installed? -->
 <!--
                            <StackPanel x:Name="FooterExitBtnDcIsland" HorizontalAlignment="Center" DataContext="{Binding InstallationViewModel}" >
                                <Button x:Name="FooterExitButton" Visibility="{Binding ExitEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding CloseCommand}" AutomationProperties.Name="Exit Button" AutomationProperties.HelpText="Click to Exit" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Exit" Style="{DynamicResource ActionButtonStyle}"/>
                            </StackPanel>
                            -->

                            <StackPanel x:Name="UninstallBtnDcIsland" Margin="0,2,0,0" DataContext="{Binding InstallationViewModel}">
                                <Button Visibility="{Binding UninstallEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding UninstallCommand}" AutomationProperties.Name="Uninstall Button" AutomationProperties.HelpText="Click to Uninstall" Content="Uninstall" Style="{DynamicResource ActionButtonStyle}"/>
                            </StackPanel>
                            <StackPanel x:Name="RepairBtnDcIsland" Margin="0,2,0,0" DataContext="{Binding InstallationViewModel}">
                                <Button x:Name="RepairButton" Visibility="{Binding RepairEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding RepairCommand}" AutomationProperties.Name="Repair Button" AutomationProperties.HelpText="Click to Repair" Content="Repair" Style="{DynamicResource ActionButtonStyle}"/>
                            </StackPanel>
                            <StackPanel x:Name="InstallBtnDcIsland" Margin="0,2,0,0" DataContext="{Binding InstallationViewModel}">
                                <Button Visibility="{Binding InstallEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding InstallCommand}" AutomationProperties.Name="Install Button" AutomationProperties.HelpText="Click to accept license and install" Content="Install" Style="{DynamicResource ActionButtonStyle}" HorizontalContentAlignment="Center"/>
                            </StackPanel>
                            <StackPanel x:Name="TryAgainBtnDcIsland" Margin="0,2,0,0" HorizontalAlignment="Center" DataContext="{Binding InstallationViewModel}">
                                <Button Command="{Binding TryAgainCommand}" AutomationProperties.Name="Try Again Button" AutomationProperties.HelpText="Click to try again" Visibility="{Binding TryAgainEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Try Again?" Style="{DynamicResource ActionButtonStyle}" />
                            </StackPanel>
                            <StackPanel x:Name="UpdateBtnDcIsland" Margin="0,2,0,0" HorizontalAlignment="Center" DataContext="{Binding UpdateViewModel}">
                                <Button Command="{Binding UpdateCommand}" AutomationProperties.Name="Update Button" AutomationProperties.HelpText="An update is availalbe. Click to get the update" Visibility="{Binding UpdateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Update" Style="{DynamicResource ActionButtonStyle}" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                
                <StackPanel x:Name="OrgLogoStkPnl" MinWidth="150" Margin="0,0,20,0" HorizontalAlignment="Stretch" DockPanel.Dock="Right" DataContext="{Binding InstallationViewModel}">
                    <Image Style="{DynamicResource LogoStyle}" >
                        
                        <Image.RenderTransform>
                            <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                        </Image.RenderTransform>
                        
                    </Image>
                    <ContentPresenter Content="WiX Toolset" TextBlock.FontFamily="{DynamicResource CambriaFontFamily}" TextBlock.FontSize="{DynamicResource ResourceKey=FontSizeBranding}" TextBlock.FontWeight="Bold" TextBlock.Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,20,5" />
                </StackPanel>

                <StackPanel Margin="20,10,5,5" HorizontalAlignment="Stretch" DockPanel.Dock="Left">

                    <Grid x:Name="SkuInfo" DataContext="{Binding InstallationViewModel}" HorizontalAlignment="Left">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" MinHeight="20"/>
                            <RowDefinition Height="auto" MinHeight="20"/>
                            <RowDefinition Height="auto" MinHeight="20"/>
                            <RowDefinition Height="auto" MinHeight="20"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" MinWidth="10" />
                            <ColumnDefinition Width="*" MinWidth="10" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="SkuOrgLabel" Margin="0,2,3,0" Grid.Row="0" Grid.Column="0" Content="Publisher:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1">
                            <Button x:Name="SkuHomePage" Margin="0,2"  Command="{Binding LaunchHomePageCommand}"  AutomationProperties.Name="Launch Home Page Button" AutomationProperties.HelpText="Open the WiX Toolset home page" Style="{StaticResource InfoButtonStyle}" HorizontalAlignment="Left" >
                                <TextBlock HorizontalAlignment="Left" ><Hyperlink Command="{Binding LaunchHomePageCommand}" IsEnabled="True" ><Run Text="www.WiXToolset.org" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                            </Button>
                            <ContentPresenter x:Name="SkuOrg" Margin="2,2"  Content="a .NET Foundation project" VerticalAlignment="Center" HorizontalAlignment="Left"  />
                        </StackPanel>
                        <ContentPresenter x:Name="SkuVersionLabel" Margin="0,2,3,0" Grid.Row="1" Grid.Column="0" Content="Version:" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeButton}" TextBlock.FontWeight="Bold" />
                        <StackPanel x:Name="SkuVersion" Grid.Row="1" Grid.Column="1" Margin="0,2" VerticalAlignment="Center" HorizontalAlignment="Left" >
                            <ContentPresenter Content="{Binding Version}" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontSize="{DynamicResource FontSizeMedium}" TextBlock.FontWeight="Light" />
                        </StackPanel>

                        <Button x:Name="SkuLicense" Margin="0,2,3,0" Grid.Row="2" Grid.Column="0" Command="{Binding LicenseCommand}"  AutomationProperties.Name="License Button" AutomationProperties.HelpText="Open the license in a new window" Style="{StaticResource InfoButtonStyle}" HorizontalAlignment="Left" >
                            <TextBlock HorizontalAlignment="Left" ><Hyperlink Command="{Binding LicenseCommand}" IsEnabled="True" ><Run Text="License:" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                        </Button>
                        <Button x:Name="SkuNews" Margin="0,2,3,0" Grid.Row="3" Grid.Column="0" Command="{Binding NewsCommand}"  AutomationProperties.Name="News Button" AutomationProperties.HelpText="See the latest news in a new window" Style="{StaticResource InfoButtonStyle}" HorizontalAlignment="Left">
                            <TextBlock HorizontalAlignment="Left"><Hyperlink Command="{Binding LaunchNewsCommand}" IsEnabled="True" ><Run Text="News:" FontSize="{DynamicResource FontSizeButton}"/></Hyperlink></TextBlock>
                        </Button>

                    </Grid>
                    </StackPanel>
            </DockPanel>
        </Border>
    </Border>
</Window>
