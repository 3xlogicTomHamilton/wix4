<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the Microsoft Reciprocal License. See LICENSE.TXT file in the project root for full license information. -->


<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
    xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework" 
    xmlns:ux="clr-namespace:WixToolset.UX">

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <StreamGeometry x:Key="CloseIcon" po:Freeze="True" >M0,0 L4,4 M0,4 L4,0</StreamGeometry>

    <!-- Brushes -->
    <!--
    <LinearGradientBrush x:Key="GradientBackgroundBrush" EndPoint="1.015,0.735" StartPoint="0.098,0.223" po:Freeze="True">
        <GradientStop Color="#88000000" Offset="0"/>
        <GradientStop Color="#88452E2E" Offset="0.108"/>
        <GradientStop Color="#88000000" Offset="0.228"/>
        <GradientStop Color="#886A3C3C" Offset="0.414"/>
        <GradientStop Color="#88000000" Offset="0.586"/>
        <GradientStop Color="#885E4242" Offset="0.737"/>
        <GradientStop Color="#88000000" Offset="0.948"/>
    </LinearGradientBrush>
    -->

    <!-- Control Templates -->

    <ControlTemplate x:Key="ButtonTemplateKey" TargetType="{x:Type Button}">
        <Grid Margin="3" x:Name="ButtonGrid">
            <Rectangle Fill="{TemplateBinding Button.Background}" />
            <Rectangle x:Name="HighlightRectangle" Fill="#44FFFFFF" Visibility="Hidden" IsHitTestVisible="False"/>
            <ContentPresenter VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="5" Content="{TemplateBinding Button.Content}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonGrid" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX=".96" ScaleY=".96" />
                            <TranslateTransform X="2" Y="2"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HighlightRectangle" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ProgressBarTemplateKey" TargetType="{x:Type ProgressBar}">
        <Grid Name="TemplateRoot" SnapsToDevicePixels="true">
            <Rectangle Fill="{TemplateBinding Background}" />
            <Rectangle Name="PART_Track" />
            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                <Grid Name="Foreground">
                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                </Grid>
            </Decorator>
        </Grid>
    </ControlTemplate>

    <!-- Styles -->
    <Style TargetType="Image">
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="RenderTransformOrigin" Value=".5,.5" />
    </Style>

    <Style x:Key="StatusTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="DarkRed" />
        <Setter Property="Background" Value="#FFCB0000" />
        <Setter Property="Template" Value="{StaticResource ProgressBarTemplateKey}"/>
    </Style>

 
    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplateKey}"/>
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighContrastButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource  {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="False">
                <Setter Property="Background" Value="{DynamicResource ThemedButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ChromeButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource  {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplateKey}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighContrastBackgroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="False">
                <Setter Property="Background" Value="{DynamicResource ThemedBackgroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource  {x:Static SystemColors.WindowTextBrushKey}}"/>
        <!--<Setter Property="Background" Value="{StaticResource DarkLight}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighContrastBackgroundBrush}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ThemedBackgroundBrush}"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                            <!--<Setter Property="Background" Value="White"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <Grid>
                        <Ellipse Fill="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                        <Path Data="{StaticResource CloseIcon}"  Stretch="Fill"
                              Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                              />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
