<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the Microsoft Reciprocal License. See LICENSE.TXT file in the project root for full license information. -->


<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
    xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework" 
    xmlns:ux="clr-namespace:WixToolset.UX">

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    
    <!-- Fonts -->
    <System:Double x:Key="FontSizeBranding">34</System:Double>

    <!-- Images -->
    <BitmapImage x:Key="LogoOverLightBackground" UriSource="pack://application:,,,/WixBA;component/resources/logo-white-hollow.png" />
    <BitmapImage x:Key="LogoOverDarkBackground" UriSource="pack://application:,,,/WixBA;component/resources/logo-black-hollow.png" />


    <!-- Control Templates -->
    <ControlTemplate x:Key="HyperlinkedButtonTemplateKey" TargetType="{x:Type Button}">
        <ContentPresenter
                  Margin="{TemplateBinding Control.Padding}"
                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                  Content="{TemplateBinding ContentControl.Content}" />
    </ControlTemplate>

    
    <!-- Styles -->
    <Style x:Key="ActionBtnStkPnlStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,2,0,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="FinalActionsStkPnlStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="80,2,0,0" />
    </Style>
    
    <Style x:Key="BrandStkPnlStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,0,20,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Width" Value="100" />
    </Style>

    <Style x:Key="TitleTextBlkStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontSize" Value="{DynamicResource ResourceKey=FontSizeBranding}" />
        <Setter Property="FontWeight" Value="ExtraBold" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
    </Style>

    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Margin" Value="5,0,0,0" />
    </Style>
    <Style x:Key="FinalActionButtonStyle" TargetType="Button">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Margin" Value="40,0,0,0" />
    </Style>

    <Style x:Key="HyperlinkedButtonStyle" TargetType="Button">
        <Setter Property="Template" Value="{StaticResource HyperlinkedButtonTemplateKey}" />
        <Setter Property="IsHitTestVisible" Value="True" />
    </Style>

    <Style x:Key="LogoStyle" TargetType="Image" >
        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="RenderTransformOrigin" Value=".5,.5" />
        <Setter Property="Source" Value="{DynamicResource LogoOverLightBackground}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsLightBackground, Source={x:Static ux:WindowProperties.Instance}}" Value="false" >
                <Setter Property="Source" Value="{DynamicResource LogoOverDarkBackground}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="StatusTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeMenu}"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Foreground" Value="{DynamicResource  {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="MinHeight" Value="60" />
    </Style>



</ResourceDictionary>

        <!-- keep temporarily until we resolve the style questions with AppX vrs default OS, design guidlines concerns
    <ControlTemplate x:Key="ButtonTemplateKey" TargetType="{x:Type Button}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
            <Grid Margin="3" x:Name="ButtonGrid">
                <Rectangle Fill="{TemplateBinding Button.Background}" />
                <Rectangle x:Name="HighlightRectangle" Fill="#44FFFFFF" Visibility="Hidden" IsHitTestVisible="False"/>
                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5" Content="{TemplateBinding Button.Content}" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonGrid" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX=".96" ScaleY=".96" />
                            <TranslateTransform X="2" Y="2"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HighlightRectangle" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


<Style x:Key="ActionButtonStyle" TargetType="Button">
    <Setter Property="MinHeight" Value="35"/>
    <Setter Property="MinWidth" Value="100" />
    <Setter Property="Margin" Value="5,0,0,0" />
    
        <Setter Property="Background" Value="{DynamicResource ThemedButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeButton}"/> 
       <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplateKey}"/>
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource  {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource HighContrastBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
            </DataTrigger>
        </Style.Triggers>
</Style>
-->    